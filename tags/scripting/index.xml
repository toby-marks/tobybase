<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>scripting on üë®üèª‚Äçüíª Tobybase</title>
    <link>http://tobybase.com/tags/scripting/</link>
    <description>Recent content in scripting on üë®üèª‚Äçüíª Tobybase</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 02 Jul 2012 22:40:00 +0000</lastBuildDate>
    
	<atom:link href="http://tobybase.com/tags/scripting/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How To Use a Perl CGI Script to Show Real Web Server Host Name</title>
      <link>http://tobybase.com/posts/2012-07-02-use-a-perl-cgi-script-to-show-real-web-server-host-name/</link>
      <pubDate>Mon, 02 Jul 2012 22:40:00 +0000</pubDate>
      
      <guid>http://tobybase.com/posts/2012-07-02-use-a-perl-cgi-script-to-show-real-web-server-host-name/</guid>
      <description>Here is a short and simple Perl CGI script that you can use to expose the hostname of your web server, as opposed to just the server/domain portion of the URL string:
#!/usr/bin/perl print &amp;#34;Content-type: text/html\n\n&amp;#34;; print `hostname`; 1; Name the file something like hostname.cgi and place it in your web server&amp;rsquo;s /cgi-bin/ directory, or if your web server is configured appropriately, just name it hostname.pl and drop it wherever you like.</description>
    </item>
    
    <item>
      <title>How To Make Bash Scripts crontab-Compatible</title>
      <link>http://tobybase.com/posts/2012-04-05-make-bash-scripts-crontab-compatible/</link>
      <pubDate>Thu, 05 Apr 2012 21:19:05 +0000</pubDate>
      
      <guid>http://tobybase.com/posts/2012-04-05-make-bash-scripts-crontab-compatible/</guid>
      <description>When writing shell scripts in bash, consider whether your script can be automated in a batch scheduler like cron. If you reference any external resources in your script relative to the directory in which it resides, those references may break when running your script through cron.
By default, crontab runs scripts in the user&amp;rsquo;s home directory, as specified in /etc/passwd. For user &amp;ldquo;Tim&amp;rdquo; with home directory /home/tim, a sample crontab might look something like the following:</description>
    </item>
    
  </channel>
</rss>
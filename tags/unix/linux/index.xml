<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>unix/linux on üë®üèª‚Äçüíª Tobybase</title>
    <link>http://tobybase.com/tags/unix/linux/</link>
    <description>Recent content in unix/linux on üë®üèª‚Äçüíª Tobybase</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 24 Jul 2013 21:42:00 +0000</lastBuildDate>
    
	<atom:link href="http://tobybase.com/tags/unix/linux/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to Use ps to List Top Memory, CPU Eating Processes</title>
      <link>http://tobybase.com/posts/2013-07-24-linux-unix-use-ps-to-list-top-memory-cpu-eating-processes/</link>
      <pubDate>Wed, 24 Jul 2013 21:42:00 +0000</pubDate>
      
      <guid>http://tobybase.com/posts/2013-07-24-linux-unix-use-ps-to-list-top-memory-cpu-eating-processes/</guid>
      <description>The ps command is a versatile and configurable way to look at the processes running on your system, though I&amp;rsquo;ve generally gotten by with a lazy ps -ef to find out whatever I needed to know. Recently, though, a client&amp;rsquo;s server began running out of memory, and as a number of processes were running on the server, the culprit was not immediately clear. I wanted to provide them with a quick, simple diagnostic tool they could use the next time they received an alert.</description>
    </item>
    
    <item>
      <title>How To Make Bash Scripts crontab-Compatible</title>
      <link>http://tobybase.com/posts/2012-04-05-make-bash-scripts-crontab-compatible/</link>
      <pubDate>Thu, 05 Apr 2012 21:19:05 +0000</pubDate>
      
      <guid>http://tobybase.com/posts/2012-04-05-make-bash-scripts-crontab-compatible/</guid>
      <description>When writing shell scripts in bash, consider whether your script can be automated in a batch scheduler like cron. If you reference any external resources in your script relative to the directory in which it resides, those references may break when running your script through cron.
By default, crontab runs scripts in the user&amp;rsquo;s home directory, as specified in /etc/passwd. For user &amp;ldquo;Tim&amp;rdquo; with home directory /home/tim, a sample crontab might look something like the following:</description>
    </item>
    
  </channel>
</rss>